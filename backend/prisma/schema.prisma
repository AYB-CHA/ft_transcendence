// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum AuthProvider {
  FT
  GITHUB
}

model User {
  id       String  @id @default(uuid())
  username String  @unique
  email    String  @unique
  fullName String
  password String?
  avatar   String

  authProvider AuthProvider?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  channels           ChannelsOnUsers[]
  Messages           Messages[]
  sentDMMessages     DMMessage[]
  initaitedDMThreads DMThread[]        @relation(name: "initiator_relation")
  secondIdDMThreads  DMThread[]        @relation(name: "participant_relation")
}

enum ChannelType {
  PUBLIC
  PRIVATE
  PROTECTED
}

model Channel {
  id     String @id @default(uuid())
  name   String
  avatar String
  topic  String

  type     ChannelType @default(PUBLIC)
  password String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users    ChannelsOnUsers[]
  Messages Messages[]
}

enum ChannelUserRole {
  ADMINISTRATOR
  MODERATOR
  MEMBER
}

model ChannelsOnUsers {
  Channel   Channel         @relation(fields: [channelId], references: [id], onDelete: Cascade)
  channelId String
  User      User            @relation(fields: [userId], references: [id])
  userId    String
  banedAt   DateTime?
  mutedAt   DateTime?
  role      ChannelUserRole @default(MEMBER)

  createdAt DateTime @default(now())

  @@id([userId, channelId])
}

model Messages {
  id        Int      @id @unique @default(autoincrement())
  text      String
  userId    String
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  channelId String
  Channel   Channel  @relation(fields: [channelId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model DMThread {
  id            String @id @default(uuid())
  initiatorId   String
  participantId String

  initiator   User        @relation(fields: [initiatorId], references: [id], name: "initiator_relation")
  participant User        @relation(fields: [participantId], references: [id], name: "participant_relation")
  messages    DMMessage[]

  @@unique([initiatorId, participantId])
}

model DMMessage {
  id       Int      @id @unique @default(autoincrement())
  text     String
  senderId String
  sender   User     @relation(fields: [senderId], references: [id])
  threadId String
  thread   DMThread @relation(fields: [threadId], references: [id])

  createdAt DateTime @default(now())
}
